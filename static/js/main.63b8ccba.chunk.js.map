{"version":3,"sources":["logo.svg","utils/Firebase.js","components/Goals.js","components/Login.js","App.js","serviceWorker.js","index.js","components/Goals.module.css"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Goals","handleInput","input","setState","target","name","console","table","state","tasks","value","getLeaner","getActiveAgain","reducePainOrInjury","improveCardioOrSpeed","improveSportsPerformance","isLoading","event","preventDefault","this","firestore","collection","add","date","Date","toString","then","alert","catch","err","log","className","styles","green","join","onSubmit","formHandle","onChange","radio","type","id","for","role","Component","Login","email","password","isLoggedIn","auth","signInWithEmailAndPassword","user","style","height","border","padding","htmlFor","aria-describedby","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.63b8ccba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAK7Gb1XCpVVzo4c_tsttehf_4v4D0UVQs\",\r\n    authDomain: \"deevesoft-assignment.firebaseapp.com\",\r\n    databaseURL: \"https://deevesoft-assignment.firebaseio.com\",\r\n    projectId: \"deevesoft-assignment\",\r\n    storageBucket: \"deevesoft-assignment.appspot.com\",\r\n    messagingSenderId: \"593812968059\",\r\n    appId: \"1:593812968059:web:f118a8c60a5e483c71c8de\",\r\n    measurementId: \"G-TZ48CTPNB6\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(config);\r\n\r\nexport default fire;","import React,{Component} from \"react\";\r\nimport fire from \"./../utils/Firebase\";\r\nimport styles from \"./Goals.module.css\";\r\n\r\nclass Goals extends Component {\r\n    constructor() {\r\n        super();\r\n        this.tasks = [\r\n            {\r\n                name: \"Get Leaner\",\r\n                value: \"getLeaner\",\r\n            },\r\n            {\r\n                name:\"Get active again\",\r\n                value: \"getActiveAgain\"\r\n            },\r\n            {\r\n                name: \"Reduce Pain or Injury\",\r\n                value: \"getActiveAgain\",\r\n            },\r\n            {\r\n                name:\"Reduce Pain or Injury\",\r\n                value: \"reducePainOrInjury\"\r\n            },\r\n            {\r\n                name: \"Improve cardio or speed\",\r\n                value:\"improveCardioOrSpeed\"\r\n            },\r\n            {\r\n                name:\"Improve sports performance\",\r\n                value:\"improveSportsPerformance\"\r\n            }\r\n        ];\r\n\r\n        this.state = {\r\n            getLeaner: false,\r\n            getActiveAgain: false,\r\n            reducePainOrInjury: false,\r\n            improveCardioOrSpeed: false,\r\n            improveSportsPerformance: false,\r\n            isLoading:false\r\n        }\r\n    }\r\n\r\n    handleInput = (input) => {\r\n        this.setState({ [input.target.name]: true },() => console.table(this.state));\r\n    };\r\n\r\n    formHandle(event) {\r\n        event.preventDefault();\r\n        this.setState({isLoading:true})\r\n        fire.firestore().collection(\"goals\").add({\r\n            getLeaner: this.state.getLeaner,\r\n            getActiveAgain: this.state.getActiveAgain,\r\n            reducePainOrInjury: this.state.reducePainOrInjury,\r\n            improveCardioOrSpeed: this.state.improveCardioOrSpeed,\r\n            improveSportsPerformance: this.state.improveSportsPerformance,\r\n            date:new Date().toString()\r\n        })\r\n        .then(() => {\r\n            this.setState({isLoading:false},() => alert(\"Goals are set!!\"))\r\n        })\r\n        .catch(err => console.log(\"Some error occured\"));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <header className=\"mb-5 row justify-content-center\">\r\n                    <h1 className={[\"text-center mt-3 w-25\",styles.green].join(\" \")}>Goal</h1>\r\n                </header>\r\n                <div className=\"row justify-content-center align-items-center\">\r\n                    <div className=\"col-md-5 col-sm-12\">\r\n                        <div className=\"left-section\">\r\n                            <h1>Goals</h1>\r\n                            <p className=\"text-justify text-muted\">Select your primary goal. What do you want to acheive in the next coming months?</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-7 col-sm-12 bg-light pb-4\">\r\n                        <div className=\"right-section mt-5 row justify-content-center\">\r\n                            <form onSubmit={(event) => this.formHandle(event)}>\r\n                            <div className=\"form-check p-3\" onChange={(event) => this.handleInput(event)}>\r\n                                <input className={[\"form-check-input\",styles.radio].join(\" \")} type=\"radio\" name=\"getLeaner\" id=\"getLeaner\" value=\"getLeaner\"/>\r\n                                <label className=\"form-check-label\" for=\"getLeaner\">\r\n                                    <h4 className=\"font-weight-normal\">Get Leaner</h4>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check p-3\" onChange={(event) => this.handleInput(event)}>\r\n                                <input className={[\"form-check-input\",styles.radio].join(\" \")} type=\"radio\" name=\"getActiveAgain\" id=\"getActiveAgain\" value=\"getActiveAgain\"/>\r\n                                <label className=\"form-check-label\" for=\"getActiveAgain\">\r\n                                    <h4 className=\"font-weight-normal\">Get active again</h4>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check p-3\" onChange={(event) => this.handleInput(event)}>\r\n                                <input className={[\"form-check-input\",styles.radio].join(\" \")} type=\"radio\" name=\"reducePainOrInjury\" id=\"reducePainOrInjury\" value=\"reducePainOrInjury\"/>\r\n                                <label className=\"form-check-label\" for=\"reducePainOrInjury\">\r\n                                    <h4 className=\"font-weight-normal\">Reduce Pain or Injury</h4>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check p-3\" onChange={(event) => this.handleInput(event)}>\r\n                                <input className={[\"form-check-input\",styles.radio].join(\" \")} type=\"radio\" name=\"improveCardioOrSpeed\" id=\"improveCardioOrSpeed\" value=\"improveCardioOrSpeed\"/>\r\n                                <label className=\"form-check-label\" for=\"improveCardioOrSpeed\">\r\n                                    <h4 className=\"font-weight-normal\">Improve cardio or speed</h4>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check p-3\" onChange={(event) => this.handleInput(event)}>\r\n                                <input className={[\"form-check-input\",styles.radio].join(\" \")} type=\"radio\" name=\"improveSportsPerformance\" id=\"improveSportsPerformance\" value=\"improveSportsPerformance\"/>\r\n                                <label className=\"form-check-label\" for=\"improveSportsPerformance\">\r\n                                    <h4 className=\"font-weight-normal\">Improve sports performance</h4>\r\n                                </label>\r\n                            </div>\r\n        <button type=\"submit\" className=\"btn btn-primary mt-4\">{!this.state.isLoading?<h4>Submit</h4>:<div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>}</button>\r\n                            </form>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Goals;","import React,{Component} from \"react\";\r\nimport fire from \"./../utils/Firebase\";\r\n\r\nimport Goals from \"./Goals\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            isLoggedIn: false,\r\n            isLoading:false\r\n        }\r\n    }\r\n\r\n    formHandle(event) {\r\n        event.preventDefault();\r\n        this.setState({isLoading:true});\r\n        fire.auth().signInWithEmailAndPassword(this.state.email,this.state.password)\r\n        .then((user) => this.setState({isLoggedIn:true}))\r\n        .catch(err => alert(\"Invalid credentials\"));\r\n    }\r\n\r\n    handleInput = (input) => {\r\n        this.setState({ [input.target.name]: input.target.value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            !this.state.isLoggedIn?\r\n                <div className=\"container\" style={{height:\"100vh\"}}>\r\n                    <div className=\"row h-100 justify-content-center align-items-center\">\r\n                        <form style={{border:\"0.5px solid gray\",padding:\"20px\"}} onSubmit={(event) => this.formHandle(event)}>\r\n                        <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" name=\"email\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" onChange={(event) => this.handleInput(event)} placeholder=\"Enter email\"/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" name=\"password\" onChange={(event) => this.handleInput(event)} id=\"exampleInputPassword1\" placeholder=\"Password\"/>\r\n                        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">{this.state.isLoading?<div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>:<h5>Submit</h5>}</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            :\r\n                <Goals/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Goals from \"./components/Goals\";\nimport Login from \"./components/Login\";\n\n\nfunction App() {\n  return (\n    <Login/>\n    //<Goals/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Goals_radio__BrMiJ\",\"green\":\"Goals_green__-L4lc\"};"],"sourceRoot":""}